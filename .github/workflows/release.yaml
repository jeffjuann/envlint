name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  generate-changelog:
    name: Generate changelog
    runs-on: ubuntu-latest
    outputs:
      release_body: ${{ steps.git-cliff.outputs.content }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate Changelog
        uses: orhun/git-cliff-action@v4
        id: git-cliff
        with:
          config: cliff.toml
          args: --latest --strip header
        env:
          GITHUB_REPO: ${{ github.repository }}

  build:
    needs: generate-changelog
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            code-target: win32-x64

          - os: windows-latest
            target: aarch64-pc-windows-msvc
            code-target: win32-arm64

          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            code-target: linux-x64-gnu

          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            code-target: linux-arm64-gnu

          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            code-target: linux-x64-musl

          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            code-target: linux-arm64-musl

          - os: macos-latest
            target: x86_64-apple-darwin
            code-target: darwin-x64

          - os: macos-latest
            target: aarch64-apple-darwin
            code-target: darwin-arm64

    name: Package ${{ matrix.code-target }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Add Rust target
        run: rustup target add ${{ matrix.target }}

      - name: Install cross
        run: cargo install cross

      - name: Build
        shell: bash
        run: |
          cross build --release -p envlint --bin envlint --target=${{ matrix.target }}

      - name: Archive Binaries
        if: runner.os == 'Windows'
        run: |
          ENVLINT_ARCHIVE_NAME=envlint-${{ github.ref_name }}-${{ matrix.code-target }}
          mv target/${{ matrix.target }}/release/envlint.exe envlint.exe
          tar -czf $ENVLINT_ARCHIVE_NAME.tar.gz envlint.exe

      - name: Archive Binaries
        if: runner.os != 'Windows'
        run: |
          ENVLINT_ARCHIVE_NAME=envlint-${{ github.ref_name }}-${{ matrix.code-target }}
          mv target/${{ matrix.target }}/release/envlint envlint
          tar czf $ENVLINT_ARCHIVE_NAME.tar.gz envlint

      - name: Upload Binary
        uses: actions/upload-artifact@v4.6.2
        with:
          if-no-files-found: error
          name: binaries-${{ matrix.code-target }}
          path: |
            *.tar.gz

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [generate-changelog, build]
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4.3.0
        with:
          path: ./artifacts

      - name: Create Release
        uses: softprops/action-gh-release@da05d552573ad5aba039eaac05058a918a7bf631 # v2.2.2
        with:
          body: ${{ needs.generate-changelog.outputs.release_body }}
          files: |
            artifacts/binaries-linux-x64-gnu/*.tar.gz
            artifacts/binaries-linux-arm64-gnu/*.tar.gz
            artifacts/binaries-linux-x64-musl/*.tar.gz
            artifacts/binaries-linux-arm64-musl/*.tar.gz
            artifacts/binaries-win32-x64/*.tar.gz
            artifacts/binaries-win32-arm64/*.tar.gz
            artifacts/binaries-darwin-x64/*.tar.gz
            artifacts/binaries-darwin-arm64/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
